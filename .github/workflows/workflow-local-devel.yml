name: Local devel workflow

on:
  workflow_dispatch:

jobs:
  init:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          #- pxfd-linux-amd64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      # - name: Import Secrets
      #   id: secrets
      #   uses: hashicorp/vault-action@v2.4.0
      #   with:
      #     url: https://vault.kube.dev.pxfd.tech/
      #     method: kubernetes
      #     path: kubernetes_shared
      #     role: action-github-runner
      #     secrets: |
      #       secret/pxfd-shared-eks/action-runner-controller/runners_secrets kubeconfig_workload-dev | kubeconfig ;

      # # Kubernetes config
      # - name: Create kubernetes config
      #   shell: bash
      #   run: |
      #     mkdir -p /home/runner/.kube
      #     echo "${{ steps.secrets.outputs.kubeconfig }}" | base64 -d > /home/runner/.kube/config
      #     chmod 600 ~/.kube/config


      - name: Kubectl version
        id: kubectl-version
        run: |
          kubectl version && kubectl get ns

      - name: Get replicas
        id: get-repl
        uses: ./get-replicas
        with:
          namespace: echoheaders
          regexp: ".*echo.*"

      - name: Get the output
        run: |
          echo "${{ steps.get-repl.outputs.replicas }}"

      - name: Set replicas
        uses: ./set-replicas
        with:
          namespace: echoheaders
          regexp: ".*echo.*"
          replicas: 2
  
      - name: Get replicas
        id: get-repl2
        uses: ./get-replicas
        with:
          namespace: echoheaders
          regexp: ".*echo.*"

      - name: Get the output
        run: |
          echo "${{ steps.get-repl2.outputs.replicas }}"

      - name: Set min replicas
        uses: ./set-min-replicas
        with:
          namespace: echoheaders
          regexp: ".*echo.*"
          replicas: 2

      - name: Prefix ingress class
        uses: ./change-ingress-class
        with:
          namespace: echoheaders
          regexp: "echoheaders-echoheaders-external"
          class: tombo-
          mode: prefix

      - name: Strip ingress class
        uses: ./change-ingress-class
        with:
          namespace: echoheaders
          regexp: "echoheaders-echoheaders-external"
          class: tombo-
          mode: strip

      - name: Append ingress class
        uses: ./change-ingress-class
        with:
          namespace: echoheaders
          regexp: "echoheaders-echoheaders-external"
          class: -tombo
          mode: append

      - name: Replace ingress class
        uses: ./change-ingress-class
        with:
          namespace: echoheaders
          regexp: "echoheaders-echoheaders-external"
          class: nginx-external
          mode: replace


  addons:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Kubectl version
        id: kubectl-version
        run: |
          kubectl config get-contexts

      - name: scale addon
        uses: ./set-replicas-addons
        with:
          namespace: default
          regexp: "demo-nginx.*"
          helm-values-file: "tests/dev-values.yaml"

  crons:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: set suspend cronjob
        uses: ./set-cronjob-suspend
        with:
          namespace: default
          regexp: "demo-cron.*"
          helm-values-file: "tests/dev-cron-values.yaml"
